import{_ as e,c as t,o as a,a2 as o}from"./chunks/framework.CSd21wiM.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"runtime-apis.md","filePath":"runtime-apis.md"}'),r={name:"runtime-apis.md"},d=o('<p>The following APIs are the same as the native Web APIS you already know. We also follow the <a href="https://wintercg.org/" target="_blank" rel="noreferrer">WinterCG</a> conventions. Lagoss&#39;s Runtime uses the V8 engine and is written in both Rust and TypeScript.</p><h2 id="handler" tabindex="-1">Handler <a class="header-anchor" href="#handler" aria-label="Permalink to &quot;Handler&quot;">​</a></h2><p>The only required code to make your Function runnable is to export a <code>handler</code> function, that accepts a <a href="#request"><code>Request</code></a> and returns a <a href="#response"><code>Response</code></a> (or a promise returning a Response):</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello World!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Starting from this simple code, you can do whatever you wish, using the Web APIs you already know.</p><h2 id="additional-headers" tabindex="-1">Additional Headers <a class="header-anchor" href="#additional-headers" aria-label="Permalink to &quot;Additional Headers&quot;">​</a></h2><p>The <code>Request</code> object coming from the <code>handler</code> function also contains additional headers:</p><ul><li><code>X-Lagon-Region</code>: the <a href="./usage/regions.html">region</a> where this Function is executing</li><li><code>X-Forwarded-For</code>: the IP address of the client that made the request</li></ul><p>You can access them the same as any other header:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> region</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x-lagon-region&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x-forwarded-for&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Region: ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}, User IP: ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>The <code>X-Lagon-Region</code> header is also automatically added to each response, making it easy to identify which Region served the request.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>When developing locally using <a href="./cli.html#lagoss-dev"><code>lagoss dev</code></a>, the <code>X-Lagon-Region</code> header will be set to <code>local</code>.</p></div><h2 id="npm-support" tabindex="-1">NPM support <a class="header-anchor" href="#npm-support" aria-label="Permalink to &quot;NPM support&quot;">​</a></h2><p>Lagoss&#39;s Runtime supports any NPM package. The only requirement is that the package must not use Node.js-specific APIs (e.g <code>Buffer</code>, <code>fs</code>, <code>path</code>, etc.). This is because Lagoss&#39;s Runtime <strong>is not Node.js</strong>, but a browser-like environment.</p><h2 id="global-objects" tabindex="-1">Global objects <a class="header-anchor" href="#global-objects" aria-label="Permalink to &quot;Global objects&quot;">​</a></h2><h3 id="abortcontroller" tabindex="-1"><code>AbortController</code> <a class="header-anchor" href="#abortcontroller" aria-label="Permalink to &quot;`AbortController`&quot;">​</a></h3><p>The standard <code>AbortController</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/AbortController" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="abortsignal" tabindex="-1"><code>AbortSignal</code> <a class="header-anchor" href="#abortsignal" aria-label="Permalink to &quot;`AbortSignal`&quot;">​</a></h3><p>The standard <code>AbortSignal</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="asynccontext" tabindex="-1"><code>AsyncContext</code> <a class="header-anchor" href="#asynccontext" aria-label="Permalink to &quot;`AsyncContext`&quot;">​</a></h3><p>An early implementation of the <a href="https://github.com/tc39/proposal-async-context" target="_blank" rel="noreferrer">Async Context proposal</a>. You shouldn&#39;t use this API yet, as it is still experimental and subject to change.</p><h3 id="asynclocalstorage" tabindex="-1"><code>AsyncLocalStorage</code> <a class="header-anchor" href="#asynclocalstorage" aria-label="Permalink to &quot;`AsyncLocalStorage`&quot;">​</a></h3><p>A minimal implementation of <a href="https://nodejs.org/api/async_context.html#class-asynclocalstorage" target="_blank" rel="noreferrer">Node.js&#39;s AsyncLocalStorage</a>. The following methods are supported:</p><ul><li><code>getStore()</code></li><li><code>run(store, callback, ...args)</code></li></ul><h3 id="blob" tabindex="-1"><code>Blob</code> <a class="header-anchor" href="#blob" aria-label="Permalink to &quot;`Blob`&quot;">​</a></h3><p>The standard <code>Blob</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="compression-stream-apis" tabindex="-1">Compression Stream APIs <a class="header-anchor" href="#compression-stream-apis" aria-label="Permalink to &quot;Compression Stream APIs&quot;">​</a></h3><p>Lagoss supports all three compression formats: <code>gzip</code>, <code>deflate</code> and <code>deflate-raw</code>.</p><h4 id="compressionstream" tabindex="-1"><code>CompressionStream</code> <a class="header-anchor" href="#compressionstream" aria-label="Permalink to &quot;`CompressionStream`&quot;">​</a></h4><p>The standard <code>CompressionStream</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompressionStream" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="decompressionstream" tabindex="-1"><code>DecompressionStream</code> <a class="header-anchor" href="#decompressionstream" aria-label="Permalink to &quot;`DecompressionStream`&quot;">​</a></h4><p>The standard <code>DecompressionStream</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/DecompressionStream" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="console" tabindex="-1"><code>console</code> <a class="header-anchor" href="#console" aria-label="Permalink to &quot;`console`&quot;">​</a></h3><p>Similar to the standard <code>console</code> object on the browser and Node.js, except that it only supports the following methods:</p><ul><li><code>log</code></li><li><code>info</code></li><li><code>debug</code></li><li><code>warn</code></li><li><code>error</code></li></ul><p>You can log multiple objects, and use string substitution. <a href="https://developer.mozilla.org/en-US/docs/Web/API/console#outputting_text_to_the_console" target="_blank" rel="noreferrer">See the documentation on MDN</a>. See the <a href="./usage/logs.html">Logs</a> documentation to learn more.</p><h3 id="crypto" tabindex="-1"><code>crypto</code> <a class="header-anchor" href="#crypto" aria-label="Permalink to &quot;`crypto`&quot;">​</a></h3><p>The standard <code>crypto</code> object.</p><h4 id="crypto-randomuuid" tabindex="-1"><code>crypto.randomUUID()</code> <a class="header-anchor" href="#crypto-randomuuid" aria-label="Permalink to &quot;`crypto.randomUUID()`&quot;">​</a></h4><p>The standard <code>randomUUID()</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="crypto-getrandomvalues" tabindex="-1"><code>crypto.getRandomValues()</code> <a class="header-anchor" href="#crypto-getrandomvalues" aria-label="Permalink to &quot;`crypto.getRandomValues()`&quot;">​</a></h4><p>The standard <code>getRandomValues()</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="crypto-subtle" tabindex="-1"><code>crypto.subtle</code> <a class="header-anchor" href="#crypto-subtle" aria-label="Permalink to &quot;`crypto.subtle`&quot;">​</a></h4><p>The standard <code>CryptoSubtle</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The following table summarizes the supported algorithms on each method:</p><table><thead><tr><th></th><th><code>sign()</code>, <code>verify()</code></th><th><code>encrypt()</code>, <code>decrypt()</code></th><th><code>digest()</code></th><th><code>deriveBits()</code>, <code>deriveKey()</code></th><th><code>wrapKey()</code>, <code>unwrapKey()</code></th></tr></thead><tbody><tr><td>RSASSA-PKCS1-v1_5</td><td>✅</td><td></td><td></td><td></td><td></td></tr><tr><td>RSA-PSS</td><td>✅</td><td></td><td></td><td></td><td></td></tr><tr><td>ECDSA</td><td>✅</td><td></td><td></td><td></td><td></td></tr><tr><td>HMAC</td><td>✅</td><td></td><td></td><td></td><td></td></tr><tr><td>RSA-OAEP</td><td></td><td>✅</td><td></td><td></td><td>✅</td></tr><tr><td>AES-CTR</td><td></td><td>✅</td><td></td><td></td><td>✅</td></tr><tr><td>AES-CBC</td><td></td><td>✅</td><td></td><td></td><td>✅</td></tr><tr><td>AES-GCM</td><td></td><td>✅</td><td></td><td></td><td>✅</td></tr><tr><td>SHA-1</td><td></td><td></td><td>✅</td><td></td><td></td></tr><tr><td>SHA-256</td><td></td><td></td><td>✅</td><td></td><td></td></tr><tr><td>SHA-384</td><td></td><td></td><td>✅</td><td></td><td></td></tr><tr><td>SHA-512</td><td></td><td></td><td>✅</td><td></td><td></td></tr><tr><td>ECDH</td><td></td><td></td><td></td><td>✅</td><td></td></tr><tr><td>HKDF</td><td></td><td></td><td></td><td>✅</td><td></td></tr><tr><td>PBKDF2</td><td></td><td></td><td></td><td>✅</td><td></td></tr><tr><td>AES-KW</td><td></td><td></td><td></td><td></td><td>❌</td></tr></tbody></table></div><h3 id="customevent" tabindex="-1"><code>CustomEvent</code> <a class="header-anchor" href="#customevent" aria-label="Permalink to &quot;`CustomEvent`&quot;">​</a></h3><p>The standard <code>CustomEvent</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="event" tabindex="-1"><code>Event</code> <a class="header-anchor" href="#event" aria-label="Permalink to &quot;`Event`&quot;">​</a></h3><p>The standard <code>Event</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Event" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="eventtarget" tabindex="-1"><code>EventTarget</code> <a class="header-anchor" href="#eventtarget" aria-label="Permalink to &quot;`EventTarget`&quot;">​</a></h3><p>The standard <code>EventTarget</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="fetch-apis" tabindex="-1">Fetch APIs <a class="header-anchor" href="#fetch-apis" aria-label="Permalink to &quot;Fetch APIs&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Looking for the <code>fetch()</code> method? <a href="#fetch">Jump to fetch()</a>.</p></div><h4 id="headers" tabindex="-1"><code>Headers</code> <a class="header-anchor" href="#headers" aria-label="Permalink to &quot;`Headers`&quot;">​</a></h4><p>The standard <code>Headers</code> object. It also supports the <a href="https://fetch.spec.whatwg.org/#dom-headers-getsetcookie" target="_blank" rel="noreferrer"><code>getSetCookie()</code> method</a>. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Headers" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="request" tabindex="-1"><code>Request</code> <a class="header-anchor" href="#request" aria-label="Permalink to &quot;`Request`&quot;">​</a></h4><p>The standard <code>Request</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Request" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="response" tabindex="-1"><code>Response</code> <a class="header-anchor" href="#response" aria-label="Permalink to &quot;`Response`&quot;">​</a></h4><p>The standard <code>Response</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Response" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><p><strong>Streaming</strong>: You can pass a <a href="#readablestream"><code>ReadableStream</code></a> object as the <code>body</code> of a <code>Response</code> to stream the response as more data becomes available. Often, you won&#39;t need to implement the logic yourself as it is implemented by the frameworks and libraries you use.</p><h4 id="url" tabindex="-1"><code>URL</code> <a class="header-anchor" href="#url" aria-label="Permalink to &quot;`URL`&quot;">​</a></h4><p>The standard <code>URL</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/URL" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This URL implementation only supports URLs with a scheme.</p></div><h4 id="urlsearchparams" tabindex="-1"><code>URLSearchParams</code> <a class="header-anchor" href="#urlsearchparams" aria-label="Permalink to &quot;`URLSearchParams`&quot;">​</a></h4><p>The standard <code>URLSearchParams</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="file" tabindex="-1"><code>File</code> <a class="header-anchor" href="#file" aria-label="Permalink to &quot;`File`&quot;">​</a></h3><p>The standard <code>File</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/File" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="filereader" tabindex="-1"><code>FileReader</code> <a class="header-anchor" href="#filereader" aria-label="Permalink to &quot;`FileReader`&quot;">​</a></h3><p>The standard <code>FileReader</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="formdata" tabindex="-1"><code>FormData</code> <a class="header-anchor" href="#formdata" aria-label="Permalink to &quot;`FormData`&quot;">​</a></h3><p>The standard <code>FormData</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="navigator-useragent" tabindex="-1"><code>navigator.userAgent</code> <a class="header-anchor" href="#navigator-useragent" aria-label="Permalink to &quot;`navigator.userAgent`&quot;">​</a></h3><p><code>navigator.userAgent</code> is a fixed string that can be used to detect the current runtime. Its value is always <code>Lagoss/VERSION</code>, where <code>VERSION</code> is the current version of the Lagoss Runtime.</p><h3 id="process-env" tabindex="-1"><code>process.env</code> <a class="header-anchor" href="#process-env" aria-label="Permalink to &quot;`process.env`&quot;">​</a></h3><p>The only usage of <code>process</code> is to access environment variables. By default, it will only contain the <code>NODE_ENV</code> variable, which is set to <code>&quot;production&quot;</code> when deployed, and to <code>&quot;development&quot;</code> when using <a href="./cli.html#lagoss-dev"><code>lagoss dev</code></a>.</p><p><a href="./usage/environment-variables.html">Learn more about environment variables</a>.</p><h3 id="progressevent" tabindex="-1"><code>ProgressEvent</code> <a class="header-anchor" href="#progressevent" aria-label="Permalink to &quot;`ProgressEvent`&quot;">​</a></h3><p>The standard <code>ProgressEvent</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="stream-apis" tabindex="-1">Stream APIs <a class="header-anchor" href="#stream-apis" aria-label="Permalink to &quot;Stream APIs&quot;">​</a></h3><h4 id="readablestream" tabindex="-1"><code>ReadableStream</code> <a class="header-anchor" href="#readablestream" aria-label="Permalink to &quot;`ReadableStream`&quot;">​</a></h4><p>The standard <code>ReadableStream</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="readablestreamdefaultreader" tabindex="-1"><code>ReadableStreamDefaultReader</code> <a class="header-anchor" href="#readablestreamdefaultreader" aria-label="Permalink to &quot;`ReadableStreamDefaultReader`&quot;">​</a></h4><p>The standard <code>ReadableStreamDefaultReader</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="transformstream" tabindex="-1"><code>TransformStream</code> <a class="header-anchor" href="#transformstream" aria-label="Permalink to &quot;`TransformStream`&quot;">​</a></h4><p>The standard <code>TransformStream</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/TransformStream" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="writablestream" tabindex="-1"><code>WritableStream</code> <a class="header-anchor" href="#writablestream" aria-label="Permalink to &quot;`WritableStream`&quot;">​</a></h4><p>The standard <code>WritableStream</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/WritableStream" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h4 id="writablestreamdefaultwriter" tabindex="-1"><code>WritableStreamDefaultWriter</code> <a class="header-anchor" href="#writablestreamdefaultwriter" aria-label="Permalink to &quot;`WritableStreamDefaultWriter`&quot;">​</a></h4><p>The standard <code>WritableStreamDefaultWriter</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="textencoder" tabindex="-1"><code>TextEncoder</code> <a class="header-anchor" href="#textencoder" aria-label="Permalink to &quot;`TextEncoder`&quot;">​</a></h3><p>The standard <code>TextEncoder</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="textdecoder" tabindex="-1"><code>TextDecoder</code> <a class="header-anchor" href="#textdecoder" aria-label="Permalink to &quot;`TextDecoder`&quot;">​</a></h3><p>The standard <code>TextDecoder</code> object. <a href="https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h2 id="global-methods" tabindex="-1">Global methods <a class="header-anchor" href="#global-methods" aria-label="Permalink to &quot;Global methods&quot;">​</a></h2><h3 id="atob" tabindex="-1"><code>atob()</code> <a class="header-anchor" href="#atob" aria-label="Permalink to &quot;`atob()`&quot;">​</a></h3><p>The standard <code>atob</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/atob" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="btoa" tabindex="-1"><code>btoa()</code> <a class="header-anchor" href="#btoa" aria-label="Permalink to &quot;`btoa()`&quot;">​</a></h3><p>The standard <code>btoa</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/btoa" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="clearinterval" tabindex="-1"><code>clearInterval()</code> <a class="header-anchor" href="#clearinterval" aria-label="Permalink to &quot;`clearInterval()`&quot;">​</a></h3><p>The standard <code>clearInterval</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/clearInterval" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="cleartimeout" tabindex="-1"><code>clearTimeout()</code> <a class="header-anchor" href="#cleartimeout" aria-label="Permalink to &quot;`clearTimeout()`&quot;">​</a></h3><p>The standard <code>clearTimeout</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/clearTimeout" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="fetch" tabindex="-1"><code>fetch()</code> <a class="header-anchor" href="#fetch" aria-label="Permalink to &quot;`fetch()`&quot;">​</a></h3><p>The standard <code>fetch</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>fetch()</code> supports both HTTP/1.1 and HTTP/2. Additionally, there are <a href="./usage/limits.html#functions">some limits</a> in place to prevent abuses.</p></div><h3 id="queuemicrotask" tabindex="-1"><code>queueMicrotask()</code> <a class="header-anchor" href="#queuemicrotask" aria-label="Permalink to &quot;`queueMicrotask()`&quot;">​</a></h3><p>The standard <code>queueMicrotask</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="setinterval" tabindex="-1"><code>setInterval()</code> <a class="header-anchor" href="#setinterval" aria-label="Permalink to &quot;`setInterval()`&quot;">​</a></h3><p>The standard <code>setInterval</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/setInterval" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p><h3 id="settimeout" tabindex="-1"><code>setTimeout()</code> <a class="header-anchor" href="#settimeout" aria-label="Permalink to &quot;`setTimeout()`&quot;">​</a></h3><p>The standard <code>setTimeout</code> method. <a href="https://developer.mozilla.org/en-US/docs/Web/API/setTimeout" target="_blank" rel="noreferrer">See the documentation on MDN</a>.</p>',111),s=[d];function n(i,l,h,c,p,m){return a(),t("div",null,s)}const k=e(r,[["render",n]]);export{b as __pageData,k as default};
